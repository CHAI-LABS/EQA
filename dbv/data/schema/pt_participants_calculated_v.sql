CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pt_participants_calculated_v` AS select `pds`.`id` AS `id`,`pds`.`round_id` AS `round_id`,`per`.`sample_id` AS `sample_id`,`pds`.`equipment_id` AS `equipment_id`,round(avg((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end)),0) AS `cd3_absolute_mean`,round(std((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end)),2) AS `cd3_absolute_sd`,(2 * round(std((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end)),2)) AS `double_cd3_absolute_sd`,(round(avg((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end)),0) + (2 * round(std((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end)),2))) AS `cd3_absolute_upper_limit`,(round(avg((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end)),0) - (2 * round(std((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end)),2))) AS `cd3_absolute_lower_limit`,ceiling(((std((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end)) / avg((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end))) * 100)) AS `cd3_absolute_cv`,(case when (ceiling(((std((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end)) / avg((case when (`per`.`cd3_absolute` <> 0) then `per`.`cd3_absolute` else NULL end))) * 100)) > 28) then 'Failed' else 'Passed' end) AS `cd3_absolute_outcome`,round(avg((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end)),0) AS `cd3_percent_mean`,round(std((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end)),2) AS `cd3_percent_sd`,(2 * round(std((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end)),2)) AS `double_cd3_percent_sd`,(round(avg((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end)),0) + (2 * round(std((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end)),2))) AS `cd3_percent_upper_limit`,(round(avg((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end)),2) - (2 * round(std((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end)),2))) AS `cd3_percent_lower_limit`,ceiling(((std((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end)) / avg((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end))) * 100)) AS `cd3_percent_cv`,(case when (ceiling(((std((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end)) / avg((case when (`per`.`cd3_percent` <> 0) then `per`.`cd3_percent` else NULL end))) * 100)) > 28) then 'Failed' else 'Passed' end) AS `cd3_percent_outcome`,round(avg((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end)),0) AS `cd4_absolute_mean`,round(std((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end)),2) AS `cd4_absolute_sd`,(2 * round(std((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end)),2)) AS `double_cd4_absolute_sd`,(round(avg((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end)),0) + (2 * round(std((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end)),2))) AS `cd4_absolute_upper_limit`,(round(avg((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end)),2) - (2 * round(std((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end)),2))) AS `cd4_absolute_lower_limit`,ceiling(((std((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end)) / avg((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end))) * 100)) AS `cd4_absolute_cv`,(case when (ceiling(((std((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end)) / avg((case when (`per`.`cd4_absolute` <> 0) then `per`.`cd4_absolute` else NULL end))) * 100)) > 28) then 'Failed' else 'Passed' end) AS `cd4_absolute_outcome`,round(avg((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end)),0) AS `cd4_percent_mean`,round(std((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end)),2) AS `cd4_percent_sd`,(2 * round(std((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end)),2)) AS `double_cd4_percent_sd`,(round(avg((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end)),0) + (2 * round(std((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end)),2))) AS `cd4_percent_upper_limit`,(round(avg((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end)),2) - (2 * round(std((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end)),2))) AS `cd4_percent_lower_limit`,ceiling(((std((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end)) / avg((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end))) * 100)) AS `cd4_percent_cv`,(case when (ceiling(((std((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end)) / avg((case when (`per`.`cd4_percent` <> 0) then `per`.`cd4_percent` else NULL end))) * 100)) > 28) then 'Failed' else 'Passed' end) AS `cd4_percent_outcome`,round(avg((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end)),0) AS `other_absolute_mean`,round(std((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end)),2) AS `other_absolute_sd`,(2 * round(std((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end)),2)) AS `double_other_absolute_sd`,(round(avg((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end)),0) + (2 * round(std((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end)),2))) AS `other_absolute_upper_limit`,(round(avg((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end)),2) - (2 * round(std((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end)),2))) AS `other_absolute_lower_limit`,ceiling(((std((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end)) / avg((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end))) * 100)) AS `other_absolute_cv`,(case when (ceiling(((std((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end)) / avg((case when (`per`.`other_absolute` <> 0) then `per`.`other_absolute` else NULL end))) * 100)) > 28) then 'Failed' else 'Passed' end) AS `other_absolute_outcome`,round(avg((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end)),0) AS `other_percent_mean`,round(std((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end)),2) AS `other_percent_sd`,(2 * round(std((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end)),2)) AS `double_other_percent_sd`,(round(avg((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end)),0) + (2 * round(std((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end)),2))) AS `other_percent_upper_limit`,(round(avg((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end)),2) - (2 * round(std((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end)),2))) AS `other_percent_lower_limit`,ceiling(((std((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end)) / avg((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end))) * 100)) AS `other_percent_cv`,(case when (ceiling(((std((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end)) / avg((case when (`per`.`other_percent` <> 0) then `per`.`other_percent` else NULL end))) * 100)) > 28) then 'Failed' else 'Passed' end) AS `other_percent_outcome`,`pds`.`doc_path` AS `doc_path` from (`pt_data_submission` `pds` join `pt_equipment_results` `per` on((`pds`.`id` = `per`.`equip_result_id`))) group by `per`.`sample_id`,`pds`.`equipment_id`